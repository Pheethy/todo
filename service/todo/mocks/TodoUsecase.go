// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "github/pheethy/todo/models"

	mock "github.com/stretchr/testify/mock"
)

// TodoUsecase is an autogenerated mock type for the TodoUsecase type
type TodoUsecase struct {
	mock.Mock
}

// CreateTask provides a mock function with given fields: ctx, task
func (_m *TodoUsecase) CreateTask(ctx context.Context, task *models.Task) error {
	ret := _m.Called(ctx, task)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Task) error); ok {
		r0 = rf(ctx, task)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FetchListTodo provides a mock function with given fields: ctx
func (_m *TodoUsecase) FetchListTodo(ctx context.Context) ([]*models.Task, error) {
	ret := _m.Called(ctx)

	var r0 []*models.Task
	if rf, ok := ret.Get(0).(func(context.Context) []*models.Task); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTodoUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewTodoUsecase creates a new instance of TodoUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTodoUsecase(t mockConstructorTestingTNewTodoUsecase) *TodoUsecase {
	mock := &TodoUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
